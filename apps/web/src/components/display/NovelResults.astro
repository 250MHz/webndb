---
import CardNovelResults from "@/components/display/CardNovelResults.astro";
import CompactNovelResults from "@/components/display/CompactNovelResults.astro";
import GridNovelResults from "@/components/display/GridNovelResults.astro";
import { Icon } from "astro-icon/components";

const novels = [
  {
    novel_id: "0123",
    title: "title1 title1 title1 title1 title1 title1title1title1",
    description:
      "description description description description description description description description description description description description description description description description description description description description description description description description description description description description description description description description description description description description description description description description description description description description description description description description description description description description description description description description description description description description description description",
    original_language: "jp",
    image: "https://images.ranobedb.org/BemgRkCwSP8WScJB.jpg",
    status: "Ongoing",
    genres: [
      "genre1",
      "genre1",
      "genre1",
      "genre1",
      "genre1",
      "genre1",
      "genre1",
    ],
    rating: "4.5",
    num_ratings: "520",
    num_reviews: "102",
    readers: "10,003",
  },
  {
    title: "title1",
    description: "description",
    image: "https://images.ranobedb.org/BemgRkCwSP8WScJB.jpg",
  },
  {
    title: "title1",
    description: "description",
    image: "https://images.ranobedb.org/BemgRkCwSP8WScJB.jpg",
  },
  {
    title: "title1",
    description: "description",
    image: "https://images.ranobedb.org/BemgRkCwSP8WScJB.jpg",
  },
  {
    title: "title1",
    description: "description",
    image: "https://images.ranobedb.org/BemgRkCwSP8WScJB.jpg",
  },
  {
    title: "title1",
    description: "description",
    image: "https://images.ranobedb.org/BemgRkCwSP8WScJB.jpg",
  },
  {
    title: "title1",
    description: "description",
    image: "https://images.ranobedb.org/BemgRkCwSP8WScJB.jpg",
  },
  {
    title: "title1",
    description: "description",
    image: "https://images.ranobedb.org/BemgRkCwSP8WScJB.jpg",
  },
  {
    title: "title1",
    description: "description",
    image: "https://images.ranobedb.org/BemgRkCwSP8WScJB.jpg",
  },
];
---

<div>
  <div class="flex justify-end pt-4">
    <div class="flex rounded-lg bg-foreground relative overflow-hidden">
      <div
        id="slider"
        class="absolute w-10 h-10 z-20 opacity-20 bg-background transition-all duration-200 ease-out hidden"
      >
      </div>
      <button
        data-view="compact"
        class="relative z-10 p-2 transition-colors text-background hover:bg-foreground/90"
      >
        <Icon name="tabler:list" class="w-6 h-6" />
      </button>
      <button
        data-view="card"
        class="relative z-10 p-2 transition-colors text-background hover:bg-foreground/90"
      >
        <Icon name="tabler:layout-grid" class="w-6 h-6" />
      </button>
      <button
        data-view="grid"
        class="relative z-10 p-2 transition-colors text-background hover:bg-foreground/90"
      >
        <Icon name="tabler:list-details" class="w-6 h-6" />
      </button>
    </div>
  </div>

  <div data-view-content="compact" class="hidden">
    <CompactNovelResults novels={novels} />
  </div>
  <div data-view-content="card" class="hidden">
    <CardNovelResults novels={novels} />
  </div>
  <div data-view-content="grid" class="hidden">
    <GridNovelResults novels={novels} />
  </div>
</div>

<script>
  import { $novelResultsView } from "@/stores/novelResultsView";

  document.addEventListener("astro:page-load", () => {
    const buttons = document.querySelectorAll<HTMLButtonElement>("[data-view]");
    const slider = document.getElementById("slider");
    const views = document.querySelectorAll<HTMLElement>("[data-view-content]");

    const updateView = (view: string) => {
      const button = Array.from(buttons).find(
        (btn) => btn.dataset.view === view,
      );
      slider.style.transform = `translateX(${button.offsetLeft}px)`;

      views.forEach((v) => {
        v.classList.toggle("hidden", v.dataset.viewContent !== view);
      });
    };

    updateView($novelResultsView.get());
    slider.classList.remove("hidden");
    $novelResultsView.subscribe(updateView);

    buttons.forEach((btn) => {
      btn.addEventListener("click", () => {
        $novelResultsView.set(btn.dataset.view);
      });
    });
  });
</script>
