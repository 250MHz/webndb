---
import CardNovelResults from "@/components/display/CardNovelResults.astro";
import CompactNovelResults from "@/components/display/CompactNovelResults.astro";
import GridNovelResults from "@/components/display/GridNovelResults.astro";
import { $novelResultsView } from "@/stores/novelResultsView";
import { IconLayoutGrid, IconList, IconListDetails } from "@tabler/icons-react";
---

<div>
  <div class="flex justify-end pt-4">
    <div class="flex rounded-lg bg-foreground relative overflow-hidden">
      <div
        id="slider"
        class="absolute w-10 h-10 opacity-20 bg-background transition-all duration-200 ease-out"
      >
      </div>
      <button
        data-view="compact"
        class="relative z-10 p-2 transition-colors text-background"
      >
        <IconList className="w-6 h-6" />
      </button>
      <button
        data-view="card"
        class="relative z-10 p-2 transition-colors text-background"
      >
        <IconListDetails className="w-6 h-6" />
      </button>
      <button
        data-view="grid"
        class="relative z-10 p-2 transition-colors text-background"
      >
        <IconLayoutGrid className="w-6 h-6" />
      </button>
    </div>
  </div>

  <div data-view-content="compact" class="hidden">
    <CompactNovelResults />
  </div>
  <div data-view-content="card" class="hidden">
    <CardNovelResults />
  </div>
  <div data-view-content="grid" class="hidden">
    <GridNovelResults />
  </div>
</div>

<script>
  import { $novelResultsView } from "@/stores/novelResultsView";

  document.addEventListener("astro:page-load", () => {
    const buttons = document.querySelectorAll<HTMLButtonElement>("[data-view]");
    const slider = document.getElementById("slider");
    const views = document.querySelectorAll<HTMLElement>("[data-view-content]");

    const updateView = (view: string) => {
      const button = Array.from(buttons).find(
        (btn) => btn.dataset.view === view,
      );
      slider.style.transform = `translateX(${button.offsetLeft}px)`;

      views.forEach((v) => {
        v.classList.toggle("hidden", v.dataset.viewContent !== view);
      });
    };

    updateView($novelResultsView.get());
    $novelResultsView.subscribe(updateView);

    buttons.forEach((btn) => {
      btn.addEventListener("click", () => {
        $novelResultsView.set(btn.dataset.view);
      });
    });
  });
</script>
