---
// TODO: color based on status, flag match, tags?
import {
  IconCircleDot,
  IconMessage,
  IconStar,
  IconUserPlus,
} from "@tabler/icons-react";
import { JP } from "country-flag-icons/react/3x2";

const { novels } = Astro.props;
---

<div class="grid grid-cols-[repeat(auto-fit,_minmax(192px,_1fr))] gap-2 pt-2">
  {
    novels.map((novel) => (
      <a
        href={`/novel/${novel.novel_id}`}
        class="relative group overflow-hidden rounded"
      >
        <img src={novel.image} class="aspect-[5/7] w-full object-cover" />
        <div class="absolute top-1 left-1 text-[10px] text-white z-10">
          <span class="flex items-center bg-black/60 px-1 py-0.5 gap-0.5 rounded backdrop-blur-sm text-green-400">
            <IconCircleDot className="w-3 h-3" /> {novel.status}
          </span>
        </div>
        <div class="absolute top-1 right-1 flex flex-col items-end gap-0.5 text-[10px] text-white z-10">
          <span class="flex items-center bg-black/60 px-1 py-0.5 gap-0.5 rounded backdrop-blur-sm">
            <IconStar className="w-3 h-3" /> {novel.rating}/{novel.num_ratings}
          </span>
          <span class="flex items-center bg-black/60 px-1 py-0.5 gap-0.5 rounded backdrop-blur-sm">
            <IconMessage className="w-3 h-3" /> {novel.num_reviews}
          </span>
          <span class="flex items-center bg-black/60 px-1 py-0.5 gap-0.5 rounded backdrop-blur-sm">
            <IconUserPlus className="w-3 h-3" /> {novel.readers}
          </span>
        </div>
        <div
          class="absolute left-0 top-0 flex flex-col aspect-[5/7] w-full p-2 gap-1 overflow-auto break-words text-white
              leading-tight rounded bg-black/80 opacity-0 group-hover:opacity-100 transition-opacity z-20
              [&::-webkit-scrollbar]:w-1 [&::-webkit-scrollbar-thumb]:rounded-full
              [&::-webkit-scrollbar-track]:bg-transparent [&::-webkit-scrollbar-thumb]:bg-transparent
              group-hover:[&::-webkit-scrollbar-track]:bg-neutral-50 group-hover:[&::-webkit-scrollbar-thumb]:bg-neutral-950/40"
        >
          <span class="text-sm font-medium">
            <JP className="w-5 h-auto inline" />
            <span class="float-right flex items-center gap-0.5 text-xs font-medium text-green-400 py-0.5">
              <IconCircleDot className="w-3 h-3" />
              {novel.status}
            </span>
            {novel.title}
          </span>
          <div class="flex gap-4 text-xs">
            <span class="flex items-center gap-0.5">
              <IconStar className="w-3 h-3" />
              {novel.rating}/{novel.num_ratings}
            </span>
            <span class="flex items-center gap-0.5">
              <IconMessage className="w-3 h-3" />
              {novel.num_reviews}
            </span>
            <span class="flex items-center gap-0.5">
              <IconUserPlus className="w-3 h-3" />
              {novel.readers}
            </span>
          </div>
          <div class="text-[10px]">
            <div class="flex flex-wrap gap-1 pb-1">
              {novel.genres?.map((genre) => (
                <span class="px-1 py-0.5 bg-white/20 rounded font-medium">
                  {genre}
                </span>
              ))}
            </div>
            <p>{novel.description}</p>
          </div>
        </div>
        <div class="absolute bottom-0 left-0 right-0 bg-gradient-to-t from-black/90 via-black/60 to-transparent p-2">
          <span class="text-white font-semibold line-clamp-5 leading-tight break-words">
            <JP className="w-6 h-auto inline" /> {novel.title}
          </span>
        </div>
      </a>
    ))
  }
</div>
