---
// TODO: color based on status, flag match
import { Icon } from "astro-icon/components";

const { novels } = Astro.props;
---

{
  novels.map((novel) => (
    <a
      href={`/novel/${novel.novel_id}`}
      class="relative group overflow-hidden rounded-md"
    >
      <img src={novel.image} class="aspect-[5/7] w-full object-cover" />
      <div class="absolute top-1 left-1 text-xs text-white z-10">
        <span class="flex items-center bg-black/60 px-1 py-0.5 gap-0.25 rounded backdrop-blur-sm font-medium text-green-400">
          <Icon name="tabler:circle-dot" class="w-4 h-4" /> {novel.status}
        </span>
      </div>
      <div class="absolute top-1 right-1 flex flex-col items-end gap-0.5 text-xs text-white z-10">
        <span class="flex items-center bg-black/60 px-1 py-0.5 gap-0.5 rounded backdrop-blur-sm">
          <Icon name="tabler:star" class="w-3 h-3" />
          {novel.rating}/{novel.num_ratings}
        </span>
        <span class="flex items-center bg-black/60 px-1 py-0.5 gap-0.5 rounded backdrop-blur-sm">
          <Icon name="tabler:message" class="w-3 h-3" /> {novel.num_reviews}
        </span>
        <span class="flex items-center bg-black/60 px-1 py-0.5 gap-0.5 rounded backdrop-blur-sm">
          <Icon name="tabler:user-plus" class="w-3 h-3" /> {novel.readers}
        </span>
      </div>
      <div
        class="absolute left-0 top-0 flex flex-col aspect-[5/7] w-full p-2 gap-1 overflow-auto break-words text-white
              leading-tight rounded-md bg-black/80 opacity-0 group-hover:opacity-100 transition-opacity z-20
              [&::-webkit-scrollbar]:w-1
              [&::-webkit-scrollbar-track]:bg-transparent [&::-webkit-scrollbar-thumb]:bg-transparent
              group-hover:[&::-webkit-scrollbar-track]:bg-neutral-50 group-hover:[&::-webkit-scrollbar-thumb]:bg-neutral-950/40"
      >
        <span class="font-medium">
          <Icon name="flag:jp-4x3" class="w-5 h-auto inline mr-1" />
          <span class="float-right flex items-center gap-0.25 text-xs font-medium text-green-400 py-0.5">
            <Icon name="tabler:circle-dot" class="w-3 h-3" />
            {novel.status}
          </span>
          {novel.title}
        </span>
        <div class="flex gap-1 text-xs">
          <span class="flex items-center gap-0.5">
            <Icon name="tabler:star" class="w-3 h-3" />
            {novel.rating}/{novel.num_ratings}
          </span>
          <span class="flex items-center gap-0.5">
            <Icon name="tabler:message" class="w-3 h-3" />
            {novel.num_reviews}
          </span>
          <span class="flex items-center gap-0.5">
            <Icon name="tabler:user-plus" class="w-3 h-3" />
            {novel.readers}
          </span>
        </div>
        <div class="text-[10px]">
          <div class="flex flex-wrap gap-1 pb-1">
            {novel.genres?.map((genre) => (
              <span class="px-1 py-0.5 bg-white/20 rounded font-medium">
                {genre}
              </span>
            ))}
          </div>
          <p>{novel.description}</p>
        </div>
      </div>
      <div class="absolute bottom-0 left-0 right-0 bg-gradient-to-t from-black/90 via-black/60 to-transparent p-2">
        <span class="text-white font-semibold line-clamp-5 leading-tight break-words drop-shadow-[1px_2px_4px_rgba(0,0,0,0.3)]">
          <Icon name="flag:jp-4x3" class="w-6 h-auto inline mr-1" />{" "}
          {novel.title}
        </span>
      </div>
    </a>
  ))
}
